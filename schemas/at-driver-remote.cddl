Command = {
  id: uint,
  CommandData,
  *text => any,
}

CommandData = (
  SessionCommand //
  VendorSettingsCommand
)

EmptyParams = { *text => any }

SessionCommand = (SessionNewCommand)

CapabilitiesRequest = {
  ?atName: text,
  ?atVersion: text,
  ?platformName: text,
  *text => any
}

SessionNewCommand = {
  method: "session.new",
  params: {capabilities: CapabilitiesRequestParameters},
}

CapabilitiesRequestParameters = {
  ?alwaysMatch: CapabilitiesRequest,
}

VendorSettingsCommand = {
  VendorSettingsSetSettingsCommand //
  VendorSettingsGetSettingsCommand //
  VendorSettingsGetSupportedSettingsCommand
}

VendorSettingsSetSettingsCommand = {
  method: "<vendor>:settings.setSettings",
  params: VendorSettingsSetSettingsParameters
}

VendorSettingSetSettingsParameters = {
  settings: [1* VendorSettingSetSettingsParametersItem ],
}

VendorSettingSetSettingsParametersItem = {
  name: text,
  value: any,
  *text => any
}

VendorSettingsGetSettingsCommand = {
  method: "<vendor>:settings.getSettings",
  params: VendorSettingsGetSettingsParameters
}

VendorSettingsGetSettingsParameters = {
  settings: [1* VendorSettingsGetSettingsParametersItem ],
}

VendorSettingsGetSettingsParametersItem = {
  name: text,
  *text => any
}

VendorSettingsGetSupportedSettingsCommand = {
  method: "<vendor>:settings.getSupportedSettings",
  params: EmptyParams
}

InteractionSendKeysCommand = {
  method: "interaction.sendKeys",
  params: InteractionSendKeysParameters
}

InteractionSendKeysParameters = {
  "text" => text,
  *text => any
}

ActionsPerformActions = {
  method: "actions.perform",
  params: [1* ActionsPerformActionsParameter ]
}

ActionsPerformActionsParameter = {
  type: "key",
  id: text,
  actions: [1* ActionItem ],
  *text => any
}

ActionItem = {
  type: "keyUp" / "keyDown",
  value: text,
  *text => any
}
