<pre class='metadata'>
Title: ARIA-AT Automation
Shortname: aria-at-automation
Level: 1
Status: w3c/CG-DRAFT
Group: ARIA-AT CG
Repository: w3c/aria-at-automation
URL: https://w3c.github.io/aria-at-automation/
Editor: Simon Pieters, Bocoup https://bocoup.com, simon@bocoup.com
!Tests: <a href=https://github.com/w3c/web-platform-tests/tree/master/aria-at-automation>web-platform-tests aria-at-automation/</a> (<a href=https://github.com/w3c/web-platform-tests/labels/aria-at-automation>ongoing work</a>)
Abstract: A short description of your spec, one or two sentences. (TODO)
</pre>

Introduction {#intro}
=====================

AT Driver defines a protocol for introspection and remote control of assistive technology software, using a bidirectional communication channel.

Explainer {#explainer}
======================

Specify a protocol using WebSocket that maximally reuses concepts and conventions from [WebDriver BiDi](https://w3c.github.io/webdriver-bidi/).

A connection has two endpoints: remote and local. The remote end can control and read from the screen reader, which can either be implemented as a standalone application or be implemented as part of the AT software. The local end is what the test interfaces with, usually in the form of language-specific libraries providing an API.

There should only be the WebSocket form of communication -- as in [BiDi-only sessions for WebDriver BiDi](https://w3c.github.io/webdriver-bidi/#supports-bidi-only-sessions).

A connection can have 0 or more [=sessions=]. Each session corresponds to an instance of an AT. We may limit the maximum number of sessions per AT to 1 initially.

Commands are grouped into modules. The modules could be: Sessions, Settings, Actions.

Message transport is provided using the WebSocket protocol.

The protocol is defined using a Concise Data Definition Language (CDDL) definition. The serialization is JSON.

Example {#explainer-example}
----------------------------

First, the local end would establish a WebSocket connection.

The local end then creates a session by sending

```
{"method":"session.new","params":{...}}
```

The local end can then send commands to change settings or send key press actions for that session. The local end assigns a command id (which is included in the message). The remote end sends a message back with the result and the command id, so the local end knows which command the message applies to.

When the screen reader speaks, the remote end will send a message as to the local end with the spoken text. This could be in the form of an event, which is not tied to any particular command.

Infrastructure {#infra}
=======================

This specification uses the same terms as in WebDriver BiDi, but the remote end is assistive technology software instead of a web browser. Some terms are redefined herein. Contrary to WebDriver, this specification does not use HTTP, only WebSocket.

Issue: need to define this properly.

Interface {#interface}
======================

Issue: https://w3c.github.io/webdriver/#interface exposes to the page JS that webdriver is active. Do we need to expose that atdriver is active?

Nodes {#nodes}
==============

The AT Driver protocol consists of communication between:

: <dfn>local end</dfn>
:: The local end represents the client side of the protocol, which is usually in the form of language-specific libraries providing an API on top of the AT Driver protocol. This specification does not place any restrictions on the details of those libraries above the level of the wire protocol.
: <dfn>remote end</dfn>
:: The remote end hosts the server side of the protocol. The remote end is responsible for driving and listening to the assistive technology and sending information to the local end as defined in this specification.

Sessions {#sessions}
====================

A <dfn>session</dfn> represents the connection between a [=local end=] and a specific [=remote end=].

Commands {#commands}
====================

Issue: Sessions https://w3c.github.io/webdriver-bidi/#module-session-commands

Settings {#settings}
--------------------

Issue: TODO enunciate capital letters, enunciate punctuation

Actions {#actions}
------------------

Issue: TODO

Events {#events}
================

Issue: TODO

Privacy {#privacy}
==================

It is advisable that [=remote ends=] create a new profile when creating a new session. This prevents potentially sensitive session data from being accessible to new sessions, ensuring both privacy and preventing state from bleeding through to the next session.

Security {#security}
====================

An assistive technology can rely on a command-line flag or a configuration option to test whether to enable AT Driver, or alternatively make the assistive technology initiate or confirm the connection through a privileged content document or control widget, in case the assistive technology does not directly implement the WebSocket endpoints.

It is strongly suggested that assistive technology require users to take explicit action to enable AT Driver, and that AT Driver remains disabled in publicly consumed versions of the assistive technology.

To prevent arbitrary machines on the network from connecting and creating sessions, it is suggested that only connections from loopback devices are allowed by default.

The remote end can include a configuration option to limit the accepted IP range allowed to connect and make requests. The default setting for this might be to limit connections to the IPv4 localhost CIDR range 127.0.0.0/8 and the IPv6 localhost address ::1. [[RFC4632]]

It is also suggested that assistive technologies make an effort to indicate that a session that is under control of AT Driver. The indication should be accessible also for non-visual users. For example, this can be done through an OS-level notification or alert dialog.

Issue: TODO sandbox (limit availability to information that apps usually can't access, e.g. login screen).

Issue: TODO no HID level simulated keypresses.

Issue: TODO exclude access to any security-sensitive settings.

Issue: TODO exclude access to any security-sensitive commands.
